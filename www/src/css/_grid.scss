
$grid-columns:                12 !default;
$grid-gutter-width:           30px !default;
$enable-grid-classes:                         true !default;

$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px
) !default;

@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {
  @return if(breakpoint-min($name, $breakpoints) == null, "", "-#{$name}");
}

@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {
  // Common properties for all breakpoints
  %grid-column {
    position: relative;
    width: 100%;
    padding-right: $gutter / 2;
    padding-left: $gutter / 2;
  }

  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    @for $i from 1 through $columns {
      .col-#{$i} {
        @extend %grid-column;
      }
    }

    .col {
      @extend %grid-column;
    }

    // @include media-breakpoint-up($breakpoint, $breakpoints) {

    //   @for $i from 1 through $columns {
    //     .col-#{$i} {
    //       color: red;
    //       @include make-col($i, $columns);
    //     }
    //   }
    // }
  }
}

@mixin make-col($size, $columns: $grid-columns) {
  flex: 0 0 percentage($size / $columns);
  // Add a `max-width` to ensure content within each column does not blow out
  // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari
  // do not appear to require this.
  max-width: percentage($size / $columns);
}

.row {
  display: flex;
  flex-wrap: wrap;
  // margin-right: -$grid-gutter-width / 2;
  // margin-left: -$grid-gutter-width / 2;
}

@if $enable-grid-classes {
  @include make-grid-columns();
}